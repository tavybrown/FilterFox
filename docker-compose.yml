version: '3.8'

services:
  # Development environment
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filterfox-dev
    volumes:
      - .:/workspace
      - node_modules:/workspace/node_modules
      - /workspace/node_modules/.cache
    ports:
      - "3000:3000"
      - "8080:8080"
      - "9000:9000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev
    networks:
      - filterfox-network

  # Testing environment
  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filterfox-test
    volumes:
      - .:/workspace
      - node_modules:/workspace/node_modules
    environment:
      - NODE_ENV=test
      - CI=true
    command: npm run test:coverage
    networks:
      - filterfox-network

  # Linting service
  lint:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filterfox-lint
    volumes:
      - .:/workspace
      - node_modules:/workspace/node_modules
    command: npm run lint
    networks:
      - filterfox-network

  # Build service
  build:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filterfox-build
    volumes:
      - .:/workspace
      - node_modules:/workspace/node_modules
      - ./dist:/workspace/dist
    environment:
      - NODE_ENV=production
    command: npm run build
    networks:
      - filterfox-network

  # Chrome extension testing
  chrome-test:
    image: selenium/standalone-chrome:latest
    container_name: filterfox-chrome-test
    ports:
      - "4444:4444"
      - "7900:7900"
    environment:
      - VNC_NO_PASSWORD=1
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
    volumes:
      - ./dist:/home/seluser/extension
    networks:
      - filterfox-network
    depends_on:
      - build

  # Firefox extension testing
  firefox-test:
    image: selenium/standalone-firefox:latest
    container_name: filterfox-firefox-test
    ports:
      - "4445:4444"
      - "7901:7900"
    environment:
      - VNC_NO_PASSWORD=1
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
    volumes:
      - ./dist:/home/seluser/extension
    networks:
      - filterfox-network
    depends_on:
      - build

  # Documentation server
  docs:
    build:
      context: .
      dockerfile: Dockerfile.docs
    container_name: filterfox-docs
    ports:
      - "8000:8000"
    volumes:
      - ./docs:/workspace/docs
    networks:
      - filterfox-network

  # Nginx reverse proxy for development
  nginx:
    image: nginx:alpine
    container_name: filterfox-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - dev
    networks:
      - filterfox-network

  # Redis for caching (if needed for analytics)
  redis:
    image: redis:7-alpine
    container_name: filterfox-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - filterfox-network
    command: redis-server --appendonly yes

volumes:
  node_modules:
  redis-data:
  
networks:
  filterfox-network:
    driver: bridge