name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Lint code
      run: npm run lint
      
    - name: 🧪 Run tests
      run: npm run test
      
    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: 🏗️ Build Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build extension
      run: npm run build
      
    - name: 📝 Validate manifest
      run: npm run validate
      
    - name: 📦 Package extension
      run: npm run pack
      
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-build-${{ github.sha }}
        path: |
          build/
          *.zip
        retention-days: 30

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Run security audit
      run: npm audit --audit-level moderate
      
    - name: 🔒 CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  compatibility:
    name: 🌐 Cross-Browser Compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build for ${{ matrix.browser }}
      run: npm run build:${{ matrix.browser }}
      
    - name: 🧪 Test ${{ matrix.browser }} compatibility
      run: npm run test:${{ matrix.browser }}

  performance:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build extension
      run: npm run build
      
    - name: ⚡ Run performance tests
      run: npm run test:performance
      
    - name: 📊 Bundle size analysis
      run: npm run analyze

  deploy:
    name: 🚀 Deploy Extension
    runs-on: ubuntu-latest
    needs: [test, build, security, compatibility]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build production version
      run: npm run build:production
      
    - name: 📦 Package for stores
      run: |
        npm run pack:chrome
        npm run pack:firefox
        
    - name: 🏪 Upload to Chrome Web Store
      env:
        CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
        CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
        CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
        CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
      run: npm run deploy:chrome
      
    - name: 🦊 Upload to Firefox Add-ons
      env:
        FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
        FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
      run: npm run deploy:firefox
      
    - name: 📋 Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: FilterFox v${{ github.run_number }}
        body: |
          ## 🚀 What's New in FilterFox v${{ github.run_number }}
          
          ### ✨ Features & Improvements
          - Enhanced ad blocking performance
          - Updated filter lists
          - Bug fixes and stability improvements
          
          ### 📦 Installation
          - **Chrome**: [Chrome Web Store](https://chrome.google.com/webstore)
          - **Firefox**: [Firefox Add-ons](https://addons.mozilla.org)
          
          ### 🔧 Technical Details
          - Build: ${{ github.sha }}
          - Node.js: ${{ env.NODE_VERSION }}
          - Manifest Version: 3
        draft: false
        prerelease: false

  notifications:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    
    steps:
    - name: 📢 Notify on success
      if: needs.deploy.result == 'success'
      run: |
        echo "✅ FilterFox deployment successful!"
        echo "🎉 New version deployed to browser stores"
        
    - name: 📢 Notify on failure  
      if: needs.deploy.result == 'failure'
      run: |
        echo "❌ FilterFox deployment failed!"
        echo "🔍 Check logs for details"